# Generated by Django 3.2.21 on 2024-03-02 16:46

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0001_initial'),
        ('carts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Banka Adı')),
                ('branch', models.CharField(max_length=255, null=True, verbose_name='Banka Şubesi')),
                ('image', models.ImageField(blank=True, upload_to='img/order/bank/', verbose_name='Banka Logusu')),
                ('iban', models.CharField(max_length=20, null=True, verbose_name='IBAN')),
                ('account_no', models.CharField(max_length=155, null=True, verbose_name='Hesap Numarası')),
                ('account_holder', models.CharField(max_length=100, null=True, verbose_name='Hesap Sahibi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': '3. Banka Bilgileri',
                'verbose_name_plural': '3. Banka Bilgileri',
            },
        ),
        migrations.CreateModel(
            name='BINList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Banka Kodu')),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Banka Adı')),
                ('bin_code', models.BigIntegerField(blank=True, null=True, verbose_name='BIN Numarası')),
                ('card_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Kart Tipi')),
                ('businesscard', models.BooleanField(default=False, verbose_name='Ticari Kart')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'ordering': ['-bank_code'],
            },
        ),
        migrations.CreateModel(
            name='ExtraditionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extradition_type', models.CharField(choices=[('Arızalı geldi', 'Arızalı geldi'), ('Hasarlı geldi', 'Hasarlı geldi'), ('Farklı ürün geldi', 'Farklı ürün geldi'), ('Bedeni bana uygun değil', 'Bedeni bana uygun değil'), ('Almaktan vazgeçtim', 'Almaktan vazgeçtim'), ('Hatalı sipariş geldi', 'Hatalı sipariş geldi'), ('Diğer', 'Diğer')], max_length=255, null=True, verbose_name='İade Nedeni')),
                ('description', models.TextField(help_text='İade talebeinizin daha hızlı sonuçlanması için açıklama yazabilirsiniz.', verbose_name='Açıklama')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_platform', models.CharField(blank=True, choices=[('TredyShop', 'TredyShop'), ('Trendyol', 'Trendyol'), ('Hepsiburada', 'Hepsiburada'), ('PTTAvm', 'PTTAvm'), ('N11', 'N11'), ('Çiçeksepeti', 'Çiçeksepeti')], default='TredyShop', max_length=100, null=True, verbose_name='Sipariş Verilen Platform')),
                ('order_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Sipariş Numarası')),
                ('order_amount', models.FloatField(null=True, verbose_name='Sipariş Tutarı')),
                ('order_total', models.FloatField(null=True, verbose_name='Ödenen Tutar')),
                ('delivery_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kargo Şirketi')),
                ('delivery_price', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kargo Ücreti')),
                ('delivery_track', models.CharField(blank=True, max_length=255, null=True, verbose_name='Takip Kodu')),
                ('track_link', models.CharField(blank=True, max_length=500, null=True, verbose_name='Takip Linki')),
                ('paymenttype', models.CharField(choices=[('Banka/Kredi Kartı', 'Banka/Kredi Kartı'), ('Havale/EFT', 'Havale/EFT')], max_length=30, null=True, verbose_name='Ödeme Tipi')),
                ('cardholder', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kart Sahibi')),
                ('cardnumber', models.CharField(blank=True, max_length=20, null=True, verbose_name='Kart Numarası')),
                ('status', models.CharField(choices=[('Yeni', 'Yeni'), ('Onaylandı', 'Onaylandı'), ('Hazırlanıyor', 'Hazırlanıyor'), ('Kargolandı', 'Kargolandı'), ('Tamamlandı', 'Tamamlandı'), ('İptal Edildi', 'İptal Edildi'), ('Ödeme Yapılmadı', 'Ödeme Yapılmadı')], default='Yeni', max_length=50, null=True, verbose_name='Sipariş Durumu')),
                ('coupon_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanılan Kupon Adı')),
                ('used_coupon', models.FloatField(blank=True, null=True, verbose_name='Kullanılan Kupon')),
                ('bill', models.FileField(null=True, upload_to='documents/bill/', verbose_name='Fatura Yükle')),
                ('preliminary_information_form', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Ön Bilgilendirme Formu')),
                ('distance_selling_contract', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Mesafeli Satış Sözleşmesi')),
                ('ip', models.CharField(max_length=50, verbose_name='İp Adresi')),
                ('is_installment', models.BooleanField(default=False, null=True, verbose_name='Taksitli Mi?')),
                ('installment', models.IntegerField(blank=True, default=0, null=True, verbose_name='Taksit Sayısı')),
                ('is_ordered', models.BooleanField(default=False, verbose_name='Sipariş Verildi Mi?')),
                ('bonuses', models.FloatField(blank=True, null=True, verbose_name='Verdiği Bonus')),
                ('approved_contract', models.BooleanField(default=False, verbose_name='Sözleşme Onayı')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.customeraddress', verbose_name='Adres')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Müşteri')),
            ],
            options={
                'verbose_name': '1. Siparişler',
                'verbose_name_plural': '1. Siparişler',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PreOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=255, null=True, verbose_name='Sipariş Numarası')),
                ('coupon', models.FloatField(blank=True, null=True)),
                ('bonuses', models.FloatField(blank=True, null=True, verbose_name='Verdiği Bonus')),
                ('cart_total', models.FloatField(blank=True, null=True)),
                ('delivery_price', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kargo Ücreti')),
                ('preliminary_information_form', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Ön Bilgilendirme Formu')),
                ('distance_selling_contract', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Mesafeli Satış Sözleşmesi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.customeraddress', verbose_name='Sipariş Adresi')),
                ('cart', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='carts.cart')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, null=True, verbose_name='Ürün Başlığı')),
                ('product_slug', models.CharField(max_length=500, null=True, verbose_name='Ürün Slug')),
                ('color', models.CharField(max_length=50, verbose_name='Renk')),
                ('size', models.CharField(max_length=50, verbose_name='Boyut')),
                ('quantity', models.IntegerField(verbose_name='Miktar')),
                ('product_price', models.FloatField(verbose_name='Ürün Fiyatı')),
                ('forward_sale', models.FloatField(blank=True, null=True, verbose_name='Vadeli Satış Fiyatı (KDV Dahil)')),
                ('coupon_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Kullanılan Kupon Adı')),
                ('used_coupon', models.FloatField(blank=True, null=True, verbose_name='Kullanılan Kupon')),
                ('ordered', models.BooleanField(default=False, verbose_name='Sipariş Verildi Mi?')),
                ('is_cancelling', models.BooleanField(default=False, verbose_name='İptal Talebi Var Mı?')),
                ('is_extradation', models.BooleanField(default=False, verbose_name='İade Talebi Var Mı?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.order', verbose_name='Sipariş')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Ürün')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Müşteri')),
            ],
            options={
                'verbose_name': '2. Ürün Siparişleri',
                'verbose_name_plural': '2. Ürün Siparişleri',
            },
        ),
        migrations.CreateModel(
            name='ExtraditionRequestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.CharField(choices=[('Kabul Edili', 'Kabul Edili'), ('Red', 'Red')], max_length=255, null=True, verbose_name='İade Sonucu')),
                ('description', models.TextField(max_length=2000, null=True, verbose_name='Açıklama')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('extraditionrequest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.extraditionrequest', verbose_name='Sipariş')),
            ],
        ),
        migrations.AddField(
            model_name='extraditionrequest',
            name='order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.order', verbose_name='Sipariş'),
        ),
        migrations.AddField(
            model_name='extraditionrequest',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Ürün'),
        ),
        migrations.AddField(
            model_name='extraditionrequest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Müşteri'),
        ),
        migrations.CreateModel(
            name='CancellationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.order', verbose_name='Sipariş')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product', verbose_name='Ürün')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Müşteri')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
